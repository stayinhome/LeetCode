给定一个有相同值的二叉搜索树（BST），找出 BST 中的所有众数（出现频率最高的元素）。

假定 BST 有如下定义：

结点左子树中所含结点的值小于等于当前结点的值
结点右子树中所含结点的值大于等于当前结点的值
左子树和右子树都是二叉搜索树

    public class Solution
    {
        List<int> ans = new List<int>();
        int ba,count,maxCount;
     
        public int[] FindMode(TreeNode root)
        {


            dfs(root);

            return ans.ToArray();

        }

        void Update(int x)
        {
            if (x == ba)
            {
                count++;
            }
            else
            {
                count = 1;
                ba = x;
            }
            if (count == maxCount)
            {
                ans.Add(x);
            }
            if (count > maxCount)
            {
                maxCount = count;
                ans = new List<int>() { x };
            }

        }

        void dfs(TreeNode node)
        {
            if(node == null)
            {
                return;
            }
            dfs(node.left);
            Update(node.val);
            dfs(node.right);

        }
    }
