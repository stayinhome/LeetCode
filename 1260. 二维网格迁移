给你一个 m 行 n 列的二维网格 grid 和一个整数 k。你需要将 grid 迁移 k 次。

每次「迁移」操作将会引发下述活动：

位于 grid[i][j] 的元素将会移动到 grid[i][j + 1]。
位于 grid[i][n - 1] 的元素将会移动到 grid[i + 1][0]。
位于 grid[m - 1][n - 1] 的元素将会移动到 grid[0][0]。
请你返回 k 次迁移操作后最终得到的 二维网格。

public class Solution {
        public IList<IList<int>> ShiftGrid(int[][] grid, int k)
        {
            int n = grid.Length, m = grid[0].Length;
            List<IList<int>> result = new List<IList<int>>();
            for(int i = 0; i < n; i++)
            {
                List<int> a = new List<int>();
                for(int j = 0;j<m; j++)
                {
                    a.Add(0);
                }
                result.Add(a);
            }
            for(int i = 0; i < n; i++)
            {
                for(int j = 0;j < m; j++)
                {
                    int index = (i * m + j + k) % (m * n);
                    result[index / m][index % m] = grid[i][j];
                }
            }

            return result;

        }
}
