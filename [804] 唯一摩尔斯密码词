国际摩尔斯密码定义一种标准编码方式，将每个字母对应于一个由一系列点和短线组成的字符串， 比如:

'a' 对应 ".-" ，
'b' 对应 "-..." ，
'c' 对应 "-.-." ，以此类推。
为了方便，所有 26 个英文字母的摩尔斯密码表如下：

[".-","-...","-.-.","-..",".","..-.","--.","....","..",".---","-.-",".-..","--","-.","---",".--.","--.-",".-.","...","-","..-","...-",".--","-..-","-.--","--.."]
给你一个字符串数组 words ，每个单词可以写成每个字母对应摩尔斯密码的组合。

例如，"cab" 可以写成 "-.-..--..." ，(即 "-.-." + ".-" + "-..." 字符串的结合)。我们将这样一个连接过程称作 单词翻译 。
对 words 中所有单词进行单词翻译，返回不同 单词翻译 的数量。

public class Solution {
        public int UniqueMorseRepresentations(string[] words)
        {
            HashSet<string> result = new HashSet<string>();

            foreach(string item in words)
            {
                result.Add(Translation(item));
            }


            return result.Count;
        }

        public string Translation(string word)
        {
            StringBuilder sb = new StringBuilder();
            foreach(char item in word)
            {
                switch (item)
                {
                    case 'a':
                        {
                            sb.Append(".-");
                            break;
                        }
                    case 'b':
                        {
                            sb.Append("-...");
                            break;
                        }
                    case 'c':
                        {
                            sb.Append("-.-.");
                            break;
                        }
                    case 'd':
                        {
                            sb.Append("-..");
                            break;
                        }
                    case 'e':
                        {
                            sb.Append(".");
                            break;
                        }
                    case 'f':
                        {
                            sb.Append("..-.");
                            break;
                        }
                    case 'g':
                        {
                            sb.Append("--.");
                            break;
                        }
                    case 'h':
                        {
                            sb.Append("....");
                            break;
                        }
                    case 'i':
                        {
                            sb.Append("..");
                            break;
                        }
                    case 'j':
                        {
                            sb.Append(".---");
                            break;
                        }
                    case 'k':
                        {
                            sb.Append("-.-");
                            break;
                        }
                    case 'l':
                        {
                            sb.Append(".-..");
                            break;
                        }
                    case 'm':
                        {
                            sb.Append("--");
                            break;
                        }
                    case 'n':
                        {
                            sb.Append("-.");
                            break;
                        }
                    case 'o':
                        {
                            sb.Append("---");
                            break;
                        }
                    case 'p':
                        {
                            sb.Append(".--.");
                            break;
                        }
                    case 'q':
                        {
                            sb.Append("--.-");
                            break;
                        }
                    case 'r':
                        {
                            sb.Append(".-.");
                            break;
                        }
                    case 's':
                        {
                            sb.Append("...");
                            break;
                        }
                    case 't':
                        {
                            sb.Append("-");
                            break;
                        }
                    case 'u':
                        {
                            sb.Append("..-");
                            break;
                        }
                    case 'v':
                        {
                            sb.Append("...-");
                            break;
                        }
                    case 'w':
                        {
                            sb.Append(".--");
                            break;
                        }
                    case 'x':
                        {
                            sb.Append("-..-");
                            break;
                        }
                    case 'y':
                        {
                            sb.Append("-.--");
                            break;
                        }
                    case 'z':
                        {
                            sb.Append("--..");
                            break;
                        }

                }
            }
            return sb.ToString();
        }
}
