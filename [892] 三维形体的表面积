给你一个 n * n 的网格 grid ，上面放置着一些 1 x 1 x 1 的正方体。每个值 v = grid[i][j] 表示 v 个正方体叠放在对应单元格 (i, j) 上。

放置好正方体后，任何直接相邻的正方体都会互相粘在一起，形成一些不规则的三维形体。

请你返回最终这些形体的总表面积。

注意：每个形体的底面也需要计入表面积中。

     public class Solution
    {
        public int SurfaceArea(int[][] grid)
        {
            int N = grid.Length;
            int CCount = 0;
            int Cfeces = 0;
            for(int row = 0; row < N; row++)
            {
                for(int col = 0; col < N; col++)
                {
                    CCount += grid[row][col];

                    if (grid[row][col] > 0)
                    {
                        Cfeces += grid[row][col] - 1;
                    }
                    if(row > 0)
                    {
                        Cfeces += Math.Min(grid[row][col], grid[row - 1][col]);
                    }
                    if (col > 0)
                    {
                        Cfeces += Math.Min(grid[row][col], grid[row][col - 1]);
                    }

                }
            }

            return CCount * 6 - 2 * Cfeces;


        }
    }
