    
    给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。

请你将两个数相加，并以相同形式返回一个表示和的链表。

你可以假设除了数字 0 之外，这两个数都不会以 0 开头。


    
    
    public class Solution
    {
        public ListNode AddTwoNumbers(ListNode l1, ListNode l2)
        {
            if(l1 == null)
            {
                return l2;
            }
            else if (l2 == null)

            {
                return l1;
            }

            ListNode result = l1;

            bool Add = false;
            while (l1 != null)
            {
                if(l2 == null)
                {
                    l1.val += (Add ? 1 : 0);

                }
                else
                {
                    l1.val += l2.val + (Add ? 1 : 0);
                }


                if(l1.val  >= 10)
                {
                    l1.val = l1.val % 10;
                    Add = true;
                }
                else
                {
                    Add = false;
                }


                if (l1 != null)
                {
                    if(l1.next == null && l2 != null)
                    {
                        l1.next = l2.next;
                        l2 = null;
                    }

                    if (l1.next == null && Add)
                    {
                        l1.next = new ListNode(1);
                        Add = false;
                    }

                    l1 = l1.next;

                }

                if (l2 != null)
                    l2 = l2.next;


            }

            return result;
        }
    }
